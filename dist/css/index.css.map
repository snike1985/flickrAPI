{"version":3,"sources":["webpack:///./app/scss/_reset.scss","webpack:///./app/scss/_animations.scss","webpack:///./app/scss/_btn.scss","webpack:///./app/scss/_colors.scss","webpack:///./app/scss/_site.scss","webpack:///./app/scss/_photos.scss","webpack:///./app/scss/_mixins.scss"],"names":[],"mappings":"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","file":"css/index.css","sourcesContent":["@charset \"utf-8\";\n/* --------------- Style to null --------------- */\n*{\n  -webkit-text-size-adjust: none;\n  -webkit-font-smoothing: antialiased;\n}\n*{-moz-box-sizing:border-box;box-sizing:border-box;}html,body,div,span,h1,h2,h3,h4,h5,h6,p,em,img,strong,sub,sup,b,u,i,dl,dt,dd,ol,ul,li,fieldset,form,label,table,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,figcaption,figure,a,footer,header,hgroup,menu,nav,section,summary,time,mark,audio,video{-webkit-tap-highlight-color: rgba(0,0,0,0);border:0;outline:0;vertical-align:baseline;background:transparent;font-size:100%;margin:0;padding:0;}a{background:transparent;}table{border-collapse:collapse;border-spacing:0;}td,td img{vertical-align:top;}input,select,button,textarea{font-size:12px;font-family:Arial, Helvetica, sans-serif;margin:0;}input[type=\"text\"],input[type=\"password\"],textarea,input[type=\"email\"],input[type=\"phone\"],input[type=\"number\"]{font:12px Arial, Helvetica, sans-serif;padding:0;}input[type=\"checkbox\"]{vertical-align:bottom;}input[type=\"radio\"]{vertical-align:text-bottom;}sub{vertical-align:sub;font-size:smaller;}sup{vertical-align:super;font-size:smaller;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}ul,ol{list-style:none;}html{overflow-y:auto;overflow-x:auto;}html,body{height:100%;}body{line-height:1;color:#000;text-align:left;z-index:1;position:relative;}input [type='text']{padding:0;}textarea{resize:none;overflow:auto;}label,input[type=\"button\"],input[type=\"submit\"],button{cursor:pointer;}input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"],button,input[type=\"text\"],input[type=\"password\"],textarea,input[type=\"email\"],input[type=\"tel\"],input[type=\"phone\"],input[type=\"number\"]{-webkit-appearance:none;}a,a:visited,a:hover,a:focus,a:active{text-decoration:none;}input[type=\"submit\"]::-moz-focus-inner,button::-moz-focus-inner{border:0;padding:0;}input:invalid{outline:none;-moz-box-shadow:none;border:none;}::-ms-clear{display:none;}input,textarea,input[type=\"search\"]:focus,:focus{outline:none;}\n/* --------------- Style to null --------------- */\n","@-webkit-keyframes loading {\n  0% { -webkit-transform: rotate(0) }\n  100% { -webkit-transform: rotate(360deg) }\n}\n@keyframes loading {\n  0% { transform: rotate(0) }\n  100% { transform: rotate(360deg) }\n}",".btn {\n  display: inline-block;\n  height: 40px;\n  padding: 10px 20px;\n  font-size: 12px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  text-align: center;\n  border: 2px solid $green;\n  background: $green;\n  color: $white;\n  cursor: pointer;\n\n  &.active {\n    color: $green;\n    background: $white;\n  }\n\n  &:hover {\n    color: $green;\n    background: $white;\n  }\n}","$green: #009688;\n$white: #ffffff;\n$grey: #e7e6e8;\n$text: rgb(61, 46, 79);",".site {\n  overflow: hidden;\n  position: relative;\n  min-width: 320px;\n  min-height: 100vh;\n  z-index: 1;\n  background: $white;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  color: $text;\n  font-size: 14px;\n\n  &__content {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n}",".photos {\n  position: relative;\n  min-height: 100vh;\n\n  &.show-more {\n\n    .photos__show-more {\n      display: block;\n    }\n  }\n\n  &.loading {\n    opacity: .7;\n    pointer-events: none;\n\n    .photos__result {\n\n      &:before,\n      &:after {\n        opacity: 1;\n      }\n    }\n  }\n\n  &.no-result {\n\n    .photos__no-result {\n      display: block;\n    }\n  }\n\n  &__filter {\n    display: flex;\n    height: 60px;\n    padding: 10px;\n\n    input {\n      padding: 10px;\n      background: $white;\n      border: 2px solid $grey;\n      font-size: 10px;\n      letter-spacing: 1.4px;\n      color: $text;\n      text-transform: uppercase;\n      font-family: 'Roboto', sans-serif;\n      font-weight: 400;\n    }\n  }\n\n  &__search {\n    flex-grow: 1;\n    margin-right: 10px;\n    height: 40px;\n  }\n\n  &__result {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 10px;\n\n    &:before {\n      position: absolute;\n      bottom: 50vh;\n      left: 50%;\n      width: 50px;\n      height: 50px;\n      margin: 0 0 -25px -25px;\n      opacity: 0;\n      z-index: 2;\n      pointer-events: none;\n      border: 5px solid $green;\n      border-color: $green $green transparent transparent;\n      border-radius: 50%;\n      content: '';\n      animation: loading 1.2s cubic-bezier(0.4, 0, 0.2, 1) infinite forwards;\n      box-sizing: border-box;\n    }\n\n    &:after {\n      position: absolute;\n      bottom: 50vh;\n      left: 50%;\n      width: 30px;\n      height: 30px;\n      margin: 0 0 -15px -15px;\n      opacity: 0;\n      z-index: 2;\n      pointer-events: none;\n      border: 3px solid $green;\n      border-color: transparent transparent $green $green;\n      border-radius: 50%;\n      content: '';\n      animation: loading 1s cubic-bezier(0.4, 0, 0.2, 1) infinite forwards;\n      box-sizing: border-box;\n    }\n  }\n\n  &__item {\n    order: 1;\n    width: 100%;\n    margin-bottom: 10px;\n    background: {\n      color: $grey;\n      size: cover;\n      repeat: no-repeat;\n      position: center;\n    };\n\n    &:before {\n      display: block;\n      width: 100%;\n      padding-top: 100%;\n      content: '';\n    }\n\n    &.no-image-url {\n      background: {\n        image: url(\"../img/no-image-icon.png\");\n        size: contain;\n      };\n    }\n  }\n\n  &__show-more {\n    display: none;\n    padding: 10px;\n    text-align: center;\n  }\n\n  &__no-result {\n    display: none;\n    @include absoluteCenterY();\n    left: 0;\n    width: 100%;\n    padding: 10px;\n    color: $text;\n    text-transform: uppercase;\n    text-align: center;\n  }\n}\n\n@media (min-width: $phone-landscape) {\n  .photos {\n\n    &__result {\n      padding: 0 5px 5px;\n    }\n\n    &__item {\n      width: calc(100%/2 - 10px);\n      margin: 5px;\n    }\n  }\n}\n\n@media (min-width: $tablet-portrait) {\n  .photos {\n\n    &__item {\n      width: calc(100%/3 - 10px);\n    }\n  }\n}\n\n@media (min-width: $desktop) {\n  .photos {\n\n    &__item {\n      width: calc(100%/5 - 10px);\n    }\n  }\n}","@mixin justify() {\n  text-align: justify;\n\n  &:after {\n    display: inline-block;\n    width: 100%;\n    content: '';\n  }\n}\n\n@mixin absoluteCenter() {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate( -50%, -50% );\n}\n@mixin absoluteCenterX() {\n  position: absolute;\n  left: 50%;\n  transform: translateX( -50% );\n}\n@mixin absoluteCenterY() {\n  position: absolute;\n  top: 50%;\n  transform: translateY( -50% );\n}\n\n// =============================================================================\n// Font Face\n// =============================================================================\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n          eot: \"?\",\n          svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n\n  $formats: (\n          otf: \"opentype\",\n          ttf: \"truetype\"\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}"],"sourceRoot":""}